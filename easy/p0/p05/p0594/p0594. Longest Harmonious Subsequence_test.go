package p0594

import "testing"

func Test_findLHS(t *testing.T) {
	type args struct {
		nums []int
	}
	tests := []struct {
		name string
		args args
		want int
	}{
		{"Example 1", args{nums: []int{1, 3, 2, 2, 5, 2, 3, 7}}, 5},
		{"Example 2", args{nums: []int{1, 2, 3, 4}}, 2},
		{"Example 3", args{nums: []int{1, 1, 1, 1}}, 0},
		{"TestCase 119", args{nums: []int{1, 2, 3, 3, 1, -14, 13, 4}}, 3},
		{"Discussion 0", args{nums: []int{2, 2, -5, 5, -4, 3, -3, 3, 5, -2, 2, 3, -4, -3, -3, -3, -2, -2, -5, 2, 3, 4, -2, 3, 1, -2, 2, -4, 3, 2, -1, -1, -5, 2, -1, -2, 1, 1, -2, 2, 3, -1, 4, -4, -1, 1, 4, 2, -2, -3, -3, 3, -2, -5, 3, 5, -2, 3, 2, -5, 0, 5, -2, -1, -5, 4, -3, 5, -4, 2, 5, 5, 1, -4, 1, 4, -3, 0, -1, 1, 2, -3, -2, 0, -5, -5, -1, 5, 2, 4, -2, 1, 0, 0, -5, 3, 2, -5, 3, -4, -5, 2, 3, -3, -3, -1, -2, 5, -1, -1, 0, 1, 2, -2, 4, 3, 4, 3, -3, 3, 4, -3, -1, 3, -3, -4, -4, 0, 5, 1, -5, -5, -5, -3, 2, -5, 4, 1, 2, 4, -1, -5, 0, -5, 4, -2, -2, -5, -4, 1, 1, 1, 3, 3, 0, -2, 0, -4, -5, 3, -4, 0, 4, -4, 3, -1, 5, -2, 2, -3, -2, -2, -1, -3, -1, 5, -4, 1, 4, 1, -4, 4, -4, -3, 0, 2, -4, -2, -2, 4, 4, -4, 5, 0, 2, 5, 2, 4, 1, 1}}, 43},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := findLHS(tt.args.nums); got != tt.want {
				t.Errorf("findLHS() = %v, want %v", got, tt.want)
			}
		})
	}
}

func Benchmark_findLHS(b *testing.B) {
	b.ReportAllocs()
	for i := 0; i < b.N; i++ {
		findLHS([]int{2, 2, -5, 5, -4, 3, -3, 3, 5, -2, 2, 3, -4, -3, -3, -3, -2, -2, -5, 2, 3, 4, -2, 3, 1, -2, 2, -4, 3, 2, -1, -1, -5, 2, -1, -2, 1, 1, -2, 2, 3, -1, 4, -4, -1, 1, 4, 2, -2, -3, -3, 3, -2, -5, 3, 5, -2, 3, 2, -5, 0, 5, -2, -1, -5, 4, -3, 5, -4, 2, 5, 5, 1, -4, 1, 4, -3, 0, -1, 1, 2, -3, -2, 0, -5, -5, -1, 5, 2, 4, -2, 1, 0, 0, -5, 3, 2, -5, 3, -4, -5, 2, 3, -3, -3, -1, -2, 5, -1, -1, 0, 1, 2, -2, 4, 3, 4, 3, -3, 3, 4, -3, -1, 3, -3, -4, -4, 0, 5, 1, -5, -5, -5, -3, 2, -5, 4, 1, 2, 4, -1, -5, 0, -5, 4, -2, -2, -5, -4, 1, 1, 1, 3, 3, 0, -2, 0, -4, -5, 3, -4, 0, 4, -4, 3, -1, 5, -2, 2, -3, -2, -2, -1, -3, -1, 5, -4, 1, 4, 1, -4, 4, -4, -3, 0, 2, -4, -2, -2, 4, 4, -4, 5, 0, 2, 5, 2, 4, 1, 1})
	}
}

func Benchmark_findLHS0(b *testing.B) {
	b.ReportAllocs()
	for i := 0; i < b.N; i++ {
		findLHS0([]int{2, 2, -5, 5, -4, 3, -3, 3, 5, -2, 2, 3, -4, -3, -3, -3, -2, -2, -5, 2, 3, 4, -2, 3, 1, -2, 2, -4, 3, 2, -1, -1, -5, 2, -1, -2, 1, 1, -2, 2, 3, -1, 4, -4, -1, 1, 4, 2, -2, -3, -3, 3, -2, -5, 3, 5, -2, 3, 2, -5, 0, 5, -2, -1, -5, 4, -3, 5, -4, 2, 5, 5, 1, -4, 1, 4, -3, 0, -1, 1, 2, -3, -2, 0, -5, -5, -1, 5, 2, 4, -2, 1, 0, 0, -5, 3, 2, -5, 3, -4, -5, 2, 3, -3, -3, -1, -2, 5, -1, -1, 0, 1, 2, -2, 4, 3, 4, 3, -3, 3, 4, -3, -1, 3, -3, -4, -4, 0, 5, 1, -5, -5, -5, -3, 2, -5, 4, 1, 2, 4, -1, -5, 0, -5, 4, -2, -2, -5, -4, 1, 1, 1, 3, 3, 0, -2, 0, -4, -5, 3, -4, 0, 4, -4, 3, -1, 5, -2, 2, -3, -2, -2, -1, -3, -1, 5, -4, 1, 4, 1, -4, 4, -4, -3, 0, 2, -4, -2, -2, 4, 4, -4, 5, 0, 2, 5, 2, 4, 1, 1})
	}
}
