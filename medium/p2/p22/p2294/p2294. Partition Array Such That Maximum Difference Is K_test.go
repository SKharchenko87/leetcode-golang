package p2294

import "testing"

func Test_partitionArray(t *testing.T) {
	type args struct {
		nums []int
		k    int
	}
	tests := []struct {
		name string
		args args
		want int
	}{
		{"Example 1", args{nums: []int{3, 6, 1, 2, 5}, k: 2}, 2},
		{"Example 2", args{nums: []int{1, 2, 3}, k: 1}, 2},
		{"Example 3", args{nums: []int{2, 2, 4, 5}, k: 0}, 3},
		{"My 0", args{nums: []int{298, 543, 523, 603, 571, 546, 936, 461, 72, 383, 368, 315, 597, 208, 113, 427, 564, 296, 959, 933, 898, 785, 638, 230, 764, 914, 132, 513, 996, 699, 4, 990, 982, 675, 812, 746, 286, 868, 100, 734, 847, 217, 342, 615, 34, 323, 924, 372, 609, 492, 970, 158, 650, 725, 74, 738, 244, 496, 336, 986, 368, 542, 127, 472, 570, 85, 895, 161, 224, 332, 860, 755, 964, 799, 228, 731, 51, 808, 995, 4, 255, 942, 609, 515, 676, 393, 923, 351, 433, 931, 511, 218, 670, 177, 94, 458, 234, 327, 84, 454, 582, 888, 227, 362, 183, 788, 47, 36, 165, 957, 519, 883, 695, 256, 843, 154, 567, 451, 32, 908, 338, 581, 446, 765, 825, 153, 853, 136, 930, 742, 812, 118, 167, 120, 871, 859, 123, 89, 276, 775, 39, 815, 12, 955, 623, 126, 284, 51, 913, 432, 272, 110, 37, 247, 801, 527, 751, 161, 802, 38, 593, 142, 341, 562, 310, 191, 922, 495, 87, 689, 518, 46, 925, 867, 437, 707, 786, 200, 116, 543, 525, 54, 772, 463, 174, 240, 323, 813, 153, 306, 757, 505, 562, 175, 221, 751, 294, 79, 771, 275}, k: 100}, 10},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := partitionArray(tt.args.nums, tt.args.k); got != tt.want {
				t.Errorf("partitionArray() = %v, want %v", got, tt.want)
			}
		})
	}
}

func Benchmark_partitionArray(b *testing.B) {
	for i := 0; i < b.N; i++ {
		partitionArray([]int{298, 543, 523, 603, 571, 546, 936, 461, 72, 383, 368, 315, 597, 208, 113, 427, 564, 296, 959, 933, 898, 785, 638, 230, 764, 914, 132, 513, 996, 699, 4, 990, 982, 675, 812, 746, 286, 868, 100, 734, 847, 217, 342, 615, 34, 323, 924, 372, 609, 492, 970, 158, 650, 725, 74, 738, 244, 496, 336, 986, 368, 542, 127, 472, 570, 85, 895, 161, 224, 332, 860, 755, 964, 799, 228, 731, 51, 808, 995, 4, 255, 942, 609, 515, 676, 393, 923, 351, 433, 931, 511, 218, 670, 177, 94, 458, 234, 327, 84, 454, 582, 888, 227, 362, 183, 788, 47, 36, 165, 957, 519, 883, 695, 256, 843, 154, 567, 451, 32, 908, 338, 581, 446, 765, 825, 153, 853, 136, 930, 742, 812, 118, 167, 120, 871, 859, 123, 89, 276, 775, 39, 815, 12, 955, 623, 126, 284, 51, 913, 432, 272, 110, 37, 247, 801, 527, 751, 161, 802, 38, 593, 142, 341, 562, 310, 191, 922, 495, 87, 689, 518, 46, 925, 867, 437, 707, 786, 200, 116, 543, 525, 54, 772, 463, 174, 240, 323, 813, 153, 306, 757, 505, 562, 175, 221, 751, 294, 79, 771, 275}, 100)
	}
}

func Benchmark_partitionArray0(b *testing.B) {
	for i := 0; i < b.N; i++ {
		partitionArray0([]int{298, 543, 523, 603, 571, 546, 936, 461, 72, 383, 368, 315, 597, 208, 113, 427, 564, 296, 959, 933, 898, 785, 638, 230, 764, 914, 132, 513, 996, 699, 4, 990, 982, 675, 812, 746, 286, 868, 100, 734, 847, 217, 342, 615, 34, 323, 924, 372, 609, 492, 970, 158, 650, 725, 74, 738, 244, 496, 336, 986, 368, 542, 127, 472, 570, 85, 895, 161, 224, 332, 860, 755, 964, 799, 228, 731, 51, 808, 995, 4, 255, 942, 609, 515, 676, 393, 923, 351, 433, 931, 511, 218, 670, 177, 94, 458, 234, 327, 84, 454, 582, 888, 227, 362, 183, 788, 47, 36, 165, 957, 519, 883, 695, 256, 843, 154, 567, 451, 32, 908, 338, 581, 446, 765, 825, 153, 853, 136, 930, 742, 812, 118, 167, 120, 871, 859, 123, 89, 276, 775, 39, 815, 12, 955, 623, 126, 284, 51, 913, 432, 272, 110, 37, 247, 801, 527, 751, 161, 802, 38, 593, 142, 341, 562, 310, 191, 922, 495, 87, 689, 518, 46, 925, 867, 437, 707, 786, 200, 116, 543, 525, 54, 772, 463, 174, 240, 323, 813, 153, 306, 757, 505, 562, 175, 221, 751, 294, 79, 771, 275}, 100)
	}
}
