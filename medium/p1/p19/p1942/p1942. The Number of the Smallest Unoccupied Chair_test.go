package p1942

import "testing"

func Test_smallestChair(t *testing.T) {
	type args struct {
		times        [][]int
		targetFriend int
	}
	tests := []struct {
		name string
		args args
		want int
	}{
		{"Example 1", args{times: [][]int{{1, 4}, {2, 3}, {4, 6}}, targetFriend: 1}, 1},
		{"Example 2", args{times: [][]int{{3, 10}, {1, 5}, {2, 6}}, targetFriend: 0}, 2},
		{"TestCase 26", args{times: [][]int{{33889, 98676}, {80071, 89737}, {44118, 52565}, {52992, 84310}, {78492, 88209}, {21695, 67063}, {84622, 95452}, {98048, 98856}, {98411, 99433}, {55333, 56548}, {65375, 88566}, {55011, 62821}, {48548, 48656}, {87396, 94825}, {55273, 81868}, {75629, 91467}}, targetFriend: 6}, 2},
		{"TestCase 27", args{times: [][]int{{65253, 94097}, {53112, 69530}, {81932, 93953}, {580, 17372}, {68060, 71030}, {89288, 90296}, {44959, 88547}, {6214, 54011}, {97818, 99471}, {78902, 97146}, {71212, 82972}, {59442, 86960}, {72154, 86992}, {53663, 80857}, {48804, 48973}, {21405, 23283}, {96683, 97745}, {44529, 57089}, {82381, 95500}, {77233, 98954}, {46567, 78575}, {61841, 63803}, {6965, 8982}, {73406, 91256}, {2908, 44896}, {13652, 60043}, {38007, 70678}, {39164, 84350}, {82783, 83192}, {12047, 44261}, {38040, 95704}, {91821, 95627}, {95954, 96558}, {42939, 49574}, {35645, 85888}, {88399, 89499}, {35336, 95198}, {29465, 42867}, {2901, 59586}, {27777, 81800}, {60421, 76192}, {24437, 55571}, {69910, 91110}, {19882, 80672}, {19066, 61320}, {56677, 74370}, {71594, 84251}, {38251, 41916}, {31467, 66022}, {76687, 88548}, {52754, 91352}, {10343, 20946}, {99927, 99962}, {45952, 53275}, {97823, 98554}, {48115, 48895}, {51322, 66032}, {69261, 83519}, {8709, 58686}, {43490, 50560}, {93228, 98446}, {16041, 56850}, {34634, 68772}, {15413, 81430}, {65434, 79855}, {37254, 58101}, {61815, 89611}, {49288, 58728}, {36730, 99097}}, targetFriend: 0}, 5},
		{"TestCase 27", args{times: [][]int{{65253, 94097}, {53112, 69530}, {81932, 93953}, {580, 17372}, {68060, 71030}, {89288, 90296}, {44959, 88547}, {6214, 54011}, {97818, 99471}, {78902, 97146}, {71212, 82972}, {59442, 86960}, {72154, 86992}, {53663, 80857}, {48804, 48973}, {21405, 23283}, {96683, 97745}, {44529, 57089}, {82381, 95500}, {77233, 98954}, {46567, 78575}, {61841, 63803}, {6965, 8982}, {73406, 91256}, {2908, 44896}, {13652, 60043}, {38007, 70678}, {39164, 84350}, {82783, 83192}, {12047, 44261}, {38040, 95704}, {91821, 95627}, {95954, 96558}, {42939, 49574}, {35645, 85888}, {88399, 89499}, {35336, 95198}, {29465, 42867}, {2901, 59586}, {27777, 81800}, {60421, 76192}, {24437, 55571}, {69910, 91110}, {19882, 80672}, {19066, 61320}, {56677, 74370}, {71594, 84251}, {38251, 41916}, {31467, 66022}, {76687, 88548}, {52754, 91352}, {10343, 20946}, {99927, 99962}, {45952, 53275}, {97823, 98554}, {48115, 48895}, {51322, 66032}, {69261, 83519}, {8709, 58686}, {43490, 50560}, {93228, 98446}, {16041, 56850}, {34634, 68772}, {15413, 81430}, {65434, 79855}, {37254, 58101}, {61815, 89611}, {49288, 58728}, {36730, 99097}}, targetFriend: 68}, 17},
		//{"TestCase 27", args{times: [][]int{{65253, 94097}, {53112, 69530}, {81932, 93953}, {580, 17372}, {68060, 71030}, {89288, 90296}, {44959, 88547}, {6214, 54011}, {97818, 99471}, {78902, 97146}, {71212, 82972}, {59442, 86960}, {72154, 86992}, {53663, 80857}, {48804, 48973}, {21405, 23283}, {96683, 97745}, {44529, 57089}, {82381, 95500}, {77233, 98954}, {46567, 78575}, {61841, 63803}, {6965, 8982}, {73406, 91256}, {2908, 44896}, {13652, 60043}, {38007, 70678}, {39164, 84350}, {82783, 83192}, {12047, 44261}, {38040, 95704}, {91821, 95627}, {95954, 96558}, {42939, 49574}, {35645, 85888}, {88399, 89499}, {35336, 95198}, {29465, 42867}, {2901, 59586}, {27777, 81800}, {60421, 76192}, {24437, 55571}, {69910, 91110}, {19882, 80672}, {19066, 61320}, {56677, 74370}, {71594, 84251}, {38251, 41916}, {31467, 66022}, {76687, 88548}, {52754, 91352}, {10343, 20946}, {99927, 99962}, {45952, 53275}, {97823, 98554}, {48115, 48895}, {51322, 66032}, {69261, 83519}, {8709, 58686}, {43490, 50560}, {93228, 98446}, {16041, 56850}, {34634, 68772}, {15413, 81430}, {65434, 79855}, {37254, 58101}, {61815, 89611}, {49288, 58728}, {36730, 99097}}, targetFriend: 69}, 17},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := smallestChair(tt.args.times, tt.args.targetFriend); got != tt.want {
				t.Errorf("smallestChair() = %v, want %v", got, tt.want)
			}
		})
	}
}
